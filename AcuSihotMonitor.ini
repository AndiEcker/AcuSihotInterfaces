[Settings]
serverip = 10.103.222.52
acudsn = SP.WORLD
checks = '''[{'background_color': (0.75, 0.6, 0, 1), 'name': 'Acumen'}, {'cols': ['AP_CODE as apt__06', 'AP_SIHOT_CAT as sh_cat__06', 'AT_GENERIC as acu_cat__09', 'AP_QUALITY as acu_quality__03', '(select f_stragg(AFT_DESC) from T_AFR, T_AFT where AFR_AFTREF = AFT_CODE and AFR_APREF = AP_CODE) as acu_feat__69L'], 'resort_criteria': 'BHC', 'parent_board': 'Acumen', 'name': 'Categorized apartments', 'where_group_order': "AP_ATREF = AT_CODE and AT_RSREF = :resort and exists (select LU_NUMBER from T_LU where LU_CLASS = 'SIHOT_HOTELS' and LU_ID = AT_RSREF and LU_ACTIVE = 1) order by AP_CODE", 'from_join': 'T_AP, T_AT'}, {'cols': ['AP_CODE as apt__06', 'AT_GENERIC as acu_cat__09', 'AP_QUALITY as acu_quality__03', '(select f_stragg(AFT_DESC) from T_AFR, T_AFT where AFR_AFTREF = AFT_CODE and AFR_APREF = AP_CODE) as acu_feat__69L'], 'parent_board': 'Acumen', 'name': 'Uncategoriesed apartments', 'where_group_order': "AP_ATREF = AT_CODE and AP_SIHOT_CAT is NULL and exists (select LU_NUMBER from T_LU where LU_CLASS = 'SIHOT_HOTELS' and LU_ID = AT_RSREF and LU_ACTIVE = 1) order by AP_CODE", 'from_join': 'T_AP, T_AT'}, {'cols': ['CD_CODE as mc__09', 'CD_SIHOT_OBJID as obj_id__09', 'CD_SNAM1 as surname__33L'], 'parent_board': 'Acumen', 'name': 'Unsynced guests', 'from_join': 'V_ACU_CD_UNSYNCED'}, {'cols': ["nvl(SIHOT_GDSNO, case when RUL_SIHOT_RATE in ('TC', 'TK') then (select 'TC' || RH_EXT_BOOK_REF from T_RH where RH_CODE = F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_RHREF')) else to_char(RUL_PRIMARY) end) as gds__18", 'SIHOT_MKT_SEG as ro__03', 'OC_CODE as omc__06', 'CD_CODE as mc__06', 'SIHOT_LINK_GROUP as link_group__18'], 'parent_board': 'Acumen', 'name': 'Unsynced reservations', 'from_join': 'V_ACU_RES_UNSYNCED'}, {'cols': ['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as logref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'], 'log_date_criteria': datetime.date(2017, 3, 19), 'parent_board': 'Acumen', 'name': 'Guest sync log', 'where_group_order': "trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'CD' and substr(SRSL_STATUS, 1, 6) = 'SYNCED' order by SRSL_DATE desc", 'from_join': 'T_SRSL'}, {'cols': ['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as log_ref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'], 'log_date_criteria': datetime.date(2017, 3, 19), 'parent_board': 'Acumen', 'name': 'Reservation sync log', 'where_group_order': "trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'RU' and substr(SRSL_STATUS, 1, 6) = 'SYNCED' order by SRSL_DATE desc", 'from_join': 'T_SRSL'}, {'cols': ['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as log_ref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'], 'log_date_criteria': datetime.date(2017, 3, 19), 'parent_board': 'Acumen', 'name': 'Guest sync errors', 'where_group_order': "trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'CD' and substr(SRSL_STATUS, 1, 6) <> 'SYNCED' order by SRSL_DATE desc", 'from_join': 'T_SRSL'}, {'cols': ['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as log_ref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'], 'log_date_criteria': datetime.date(2017, 3, 19), 'parent_board': 'Acumen', 'name': 'Reservation sync errors', 'where_group_order': "trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'RU' and substr(SRSL_STATUS, 1, 6) <> 'SYNCED' order by SRSL_DATE desc", 'from_join': 'T_SRSL'}, {'background_color': (0.69, 0, 0, 1), 'name': 'Sihot'}, {'column_attributes': [{'size_hint_x': 0.18, 'column_name': 'GDS_NO', 'halign': 'center'}, {'size_hint_x': 0.72, 'column_name': 'Discrepancy', 'halign': 'left'}], 'parent_board': 'Sihot', 'days_criteria': '100', 'first_arrival_criteria': datetime.date(2018, 3, 19), 'background_color': (0.69, 0, 0, 1), 'check_result': [('1058863', 'Room no mismatch  a=0606'), ('1058864', 'Room no mismatch  a=0606'), ('1055696', 'Room no mismatch  a=0331'), ('1055697', 'Room no mismatch  a=0331'), ('1047182', 'Room no mismatch None a=1114'), ('1047183', 'Room no mismatch None a=1114'), ('1062225', 'Sihot search error '), ('1062324', 'Sihot search error ')], 'name': 'Reservation Discrepancies', 'last_check': '19-03-17 11:32:30'}, {'parent_board': 'Sihot', 'background_color': (0.69, 0, 0, 1), 'name': 'Notification'}, {'background_color': (0.75, 0.36, 0, 1), 'name': 'Acu Server'}, {'parent_board': 'Acu Server', 'name': 'Time Sync'}, {'parent_board': 'Acu Server', 'name': 'Link Alive'}, {'background_color': (0, 0, 0.6, 1), 'name': 'System Config'}, {'parent_board': 'System Config', 'name': 'Agency Match Codes'}, {'parent_board': 'System Config', 'name': 'Agency Object Ids'}]'''
ori_checks = '''[
	dict(name='Acumen', background_color=(0.75, 0.6, 0, 1)),
	dict(name='Categorized apartments', parent_board='Acumen', from_join='T_AP, T_AT',
	cols=['AP_CODE as apt__06', 'AP_SIHOT_CAT as sh_cat__06', 'AT_GENERIC as acu_cat__09', 'AP_QUALITY as acu_quality__03',
	'(select f_stragg(AFT_DESC) from T_AFR, T_AFT where AFR_AFTREF = AFT_CODE and AFR_APREF = AP_CODE) as acu_feat__69L'],
	where_group_order="AP_ATREF = AT_CODE and AT_RSREF = :resort"
	" and exists (select LU_NUMBER from T_LU where LU_CLASS = 'SIHOT_HOTELS'"
	" and LU_ID = AT_RSREF and LU_ACTIVE = 1) order by AP_CODE", resort_criteria='BHC'),
	dict(name='Uncategoriesed apartments', parent_board='Acumen', from_join='T_AP, T_AT',
	cols=['AP_CODE as apt__06', 'AT_GENERIC as acu_cat__09', 'AP_QUALITY as acu_quality__03',
	'(select f_stragg(AFT_DESC) from T_AFR, T_AFT where AFR_AFTREF = AFT_CODE and AFR_APREF = AP_CODE) as acu_feat__69L'],
	where_group_order="AP_ATREF = AT_CODE and AP_SIHOT_CAT is NULL"
	" and exists (select LU_NUMBER from T_LU where LU_CLASS = 'SIHOT_HOTELS'"
	" and LU_ID = AT_RSREF and LU_ACTIVE = 1) order by AP_CODE"),
	dict(name='Unsynced guests', parent_board='Acumen', from_join='V_ACU_CD_UNSYNCED',
	cols=['CD_CODE as mc__09', 'CD_SIHOT_OBJID as obj_id__09', 'CD_SNAM1 as surname__33L']),
	dict(name='Unsynced reservations', parent_board='Acumen', from_join='V_ACU_RES_UNSYNCED',
	cols=["nvl(SIHOT_GDSNO, case when RUL_SIHOT_RATE in ('TC', 'TK') then"
	" (select 'TC' || RH_EXT_BOOK_REF from T_RH where"
	" RH_CODE = F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_RHREF'))"
	" else to_char(RUL_PRIMARY) end) as gds__18",
	'SIHOT_MKT_SEG as ro__03', 'OC_CODE as omc__06', 'CD_CODE as mc__06', 'SIHOT_LINK_GROUP as link_group__18']),
	dict(name='Guest sync log', parent_board='Acumen', from_join='T_SRSL',
	cols=['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as logref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'CD'"
	" and substr(SRSL_STATUS, 1, 6) = 'SYNCED'"
	" order by SRSL_DATE desc", log_date_criteria=datetime.date.today()),
	dict(name='Reservation sync log', parent_board='Acumen', from_join='T_SRSL',
	cols=['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as log_ref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'RU'"
	" and substr(SRSL_STATUS, 1, 6) = 'SYNCED'"
	" order by SRSL_DATE desc", log_date_criteria=datetime.date.today()),
	dict(name='Guest sync errors', parent_board='Acumen', from_join='T_SRSL',
	cols=['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as log_ref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'CD'"
	" and substr(SRSL_STATUS, 1, 6) <> 'SYNCED'"
	" order by SRSL_DATE desc", log_date_criteria=datetime.date.today()),
	dict(name='Reservation sync errors', parent_board='Acumen', from_join='T_SRSL',
	cols=['SRSL_PRIMARY as pk__09', 'SRSL_LOGREF as log_ref__09', 'SRSL_STATUS as status__18', 'SRSL_MESSAGE as msg__60L'],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'RU'"
	" and substr(SRSL_STATUS, 1, 6) <> 'SYNCED'"
	" order by SRSL_DATE desc", log_date_criteria=datetime.date.today()),
	dict(name='Sihot', background_color=(0.69, 0, 0, 1)),
	dict(name='Reservation Discrepancies', parent_board='Sihot',
	first_arrival_criteria=datetime.date.today(), days_criteria='1'),
	dict(name='Notification', parent_board='Sihot'),
	dict(name='Acu Server', background_color=(0.75, 0.36, 0, 1)),
	dict(name='Time Sync', parent_board='Acu Server'),
	dict(name='Link Alive', parent_board='Acu Server'),
	dict(name='System Config', background_color=(0, 0, 0.6, 1)),
	dict(name='Agency Match Codes', parent_board='System Config'),
	dict(name='Agency Object Ids', parent_board='System Config'),
	]'''

