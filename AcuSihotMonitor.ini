[Settings]
serverip = 10.103.222.52
acudsn = SP.WORLD
acupassword = 
checks_template = '''[
	dict(name='Acumen', background_color=(0.75, 0.6, 0, 1)
	),
	dict(name='AcuConfig', parent_board='Acumen'
	),
	dict(name='Categorized apartments', parent_board='AcuConfig', from_join="T_AP, T_AT",
	cols=["AP_CODE as apt__06", "AP_SIHOT_CAT as sh_cat__06", "AT_GENERIC as acu_cat__09", "AP_QUALITY as acu_quality__03",
	"(select f_stragg(AFT_DESC) from T_AFR, T_AFT where AFR_AFTREF = AFT_CODE and AFR_APREF = AP_CODE) as acu_feat__69L"],
	where_group_order="AP_ATREF = AT_CODE and AT_RSREF in (:resort)",
	resort_criteria=['BHC'], resort_selection=['BHH', 'BHC', 'HMC', 'PBC']
	),
	dict(name='Uncategoriesed apartments', parent_board='AcuConfig', from_join="T_AP, T_AT",
	cols=["AP_CODE as apt__06", "AT_GENERIC as acu_cat__09", "AP_QUALITY as acu_quality__03",
	"(select f_stragg(AFT_DESC) from T_AFR, T_AFT where AFR_AFTREF = AFT_CODE and AFR_APREF = AP_CODE) as acu_feat__69L"],
	where_group_order="AP_ATREF = AT_CODE and AP_SIHOT_CAT is NULL"
	" and exists (select LU_NUMBER from T_LU where LU_CLASS = 'SIHOT_HOTELS'"
	" and LU_ID = AT_RSREF and LU_ACTIVE = 1) order by AP_CODE"
	),
	dict(name='AcuToSihot', parent_board='Acumen'
	),
	dict(name='Unsynced guests', parent_board='AcuToSihot', from_join="V_ACU_CD_UNSYNCED",
	cols=["CD_CODE as mc__09", "CD_SIHOT_OBJID as obj_id__09", "CD_SNAM1 as surname__33L"],
	where_group_order="(upper(CD_CODE) like upper(:matchcode) or upper(:matchcode) = 'ALL') and (upper(CD_SNAM1) like upper(:surname) or upper(:surname) = 'ALL')",
	matchcode_criteria='ALL', surname_criteria='Smithson%%'
	),
	dict(name='Unsynced reservations', parent_board='AcuToSihot', from_join="V_ACU_RES_UNSYNCED",
	cols=["nvl(SIHOT_GDSNO, case when RUL_SIHOT_RATE in ('TC', 'TK') then"
	" (select 'TC' || RH_EXT_BOOK_REF from T_RH where RH_CODE = F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_RHREF'))"
	" else to_char(RUL_PRIMARY) end) as gds__18",
	"OC_CODE as omc__06", "CD_CODE as mc__06", "SIHOT_LINK_GROUP as link_group__18", "SIHOT_MKT_SEG as ro__03",
	"to_char(nvl(ARR_DATE, to_date(F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_FROM_DATE'), 'DD-MM-YY')), '" \
	+ self.config_eval_vars['date_format'].replace('%%d', 'DD').replace('%%m', 'MM').replace('%%b', 'MON').replace('%%y', 'YY').replace('%%Y', 'YYYY') + "') as arr__06",
	"to_char(nvl(DEP_DATE, to_date(F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_FROM_DATE'), 'DD-MM-YY')"
	" + to_number(F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_DAYS'))), '" \
	+ self.config_eval_vars['date_format'].replace('%%d', 'DD').replace('%%m', 'MM').replace('%%b', 'MON').replace('%%y', 'YY').replace('%%Y', 'YYYY') + "') as dep__06",
	"case when SIHOT_MKT_SEG in ('TC', 'TK') then F_SIHOT_CAT('RU' || RU_CODE) else RUL_SIHOT_CAT end as cat__03", "F_SIHOT_CAT('RU' || RU_CODE) as pcat__03",
	"RUL_ACTION as action__06",
	],
	where_group_order="exists (select NULL from T_LU where LU_CLASS = 'SIHOT_HOTELS' and LU_NUMBER = RUL_SIHOT_HOTEL and LU_ID = :resort)"
	" and case when substr(:mkt, 1, 4) = 'ALL-' then instr(substr(:mkt, 5), RUL_SIHOT_RATE) - 1"
	" when :mkt = 'ALL' then -1"
	" else -instr(:mkt, RUL_SIHOT_RATE) end < 0",
	resort_criteria='BHC', resort_selection=dict(from_join="T_LU", cols=["LU_ID"], where_group_order="LU_CLASS = 'SIHOT_HOTELS' and LU_ACTIVE = 1 order by LU_NUMBER"),
	mkt_criteria='ALL-TO TG' #, mkt_selection=dict(from_join="T_RO", cols=["RO_CODE"], where_group_order="RO_SIHOT_RATE is not NULL union all select 'ALL' from dual")
	),
	dict(name='Guest sync log', parent_board='AcuToSihot', from_join="T_SRSL",
	cols=["SRSL_PRIMARY as pk__09", "SRSL_LOGREF as logref__09", "SRSL_STATUS as status__18", "SRSL_MESSAGE as msg__60L"],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'CD'"
	" and substr(SRSL_STATUS, 1, 6) = 'SYNCED'"
	" order by SRSL_DATE desc",
	log_date_criteria=datetime.date.today()
	),
	dict(name='Reservation sync log', parent_board='AcuToSihot', from_join="T_SRSL",
	cols=["SRSL_PRIMARY as pk__09", "SRSL_LOGREF as log_ref__09", "SRSL_STATUS as status__18", "SRSL_MESSAGE as msg__60L"],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'RU'"
	" and substr(SRSL_STATUS, 1, 6) = 'SYNCED'"
	" order by SRSL_DATE desc", log_date_criteria=datetime.date.today()
	),
	dict(name='Guest sync errors', parent_board='AcuToSihot', from_join="T_SRSL",
	cols=["SRSL_PRIMARY as pk__09", "SRSL_LOGREF as log_ref__09", "SRSL_STATUS as status__18", "SRSL_MESSAGE as msg__60L"],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'CD'"
	" and substr(SRSL_STATUS, 1, 6) <> 'SYNCED'"
	" order by SRSL_DATE desc", log_date_criteria=datetime.date.today()
	),
	dict(name='Reservation sync errors', parent_board='AcuToSihot', from_join="T_SRSL",
	cols=["SRSL_PRIMARY as pk__09", "SRSL_LOGREF as log_ref__09", "SRSL_STATUS as status__18", "SRSL_MESSAGE as msg__60L"],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'RU'"
	" and substr(SRSL_STATUS, 1, 6) <> 'SYNCED'"
	" order by SRSL_DATE desc", log_date_criteria=datetime.date.today()
	),
	dict(name='Reservation Changes', parent_board='AcuToSihot', from_join="V_ACU_RES_FILTERED, T_SRSL r",
	cols=[
	"CD_CODE as mc__06", "OC_CODE as omc__06", "SIHOT_LINK_GROUP as link_group__12", "SIHOT_MKT_SEG as ro__02",
	"nvl(SIHOT_GDSNO, case when RUL_SIHOT_RATE in ('TC', 'TK') then"
	" (select 'TC' || RH_EXT_BOOK_REF from T_RH where RH_CODE = F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_RHREF'))"
	" else to_char(RUL_PRIMARY) end) as gds__06",
	"to_char(nvl(ARR_DATE, to_date(F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_FROM_DATE'), 'DD-MM-YY')), '"
	+ self.config_eval_vars['date_format'].replace('%%d', 'DD').replace('%%m', 'MM').replace('%%b', 'MON').replace('%%y', 'YY').replace('%%Y', 'YYYY') + "') as arr__09",
	"to_char(nvl(DEP_DATE, to_date(F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_FROM_DATE'), 'DD-MM-YY')"
	" + to_number(F_KEY_VAL(replace(replace(RUL_CHANGES, ' (', '='''), ')', ''''), 'RU_DAYS'))), '"
	+ self.config_eval_vars['date_format'].replace('%%d', 'DD').replace('%%m', 'MM').replace('%%b', 'MON').replace('%%y', 'YY').replace('%%Y', 'YYYY') + "') as dep__09",
	"case when SIHOT_MKT_SEG in ('TC', 'TK') then F_SIHOT_CAT('RU' || RU_CODE) else RUL_SIHOT_CAT end as cat__04", "F_SIHOT_CAT('RU' || RU_CODE) as pcat__04",
	"RUL_ACTION as action__06", "RUL_SIHOT_PACK as pack__03",
	"(select f_stragg(ARO_ROREF || '/' || ARO_CDREF || '@' || ARO_EXP_ARRIVE || '=' || ARO_STATUS) from T_RU x, T_ARO"
	" where x.RU_FROM_DATE < ARO_EXP_DEPART and x.RU_FROM_DATE + x.RU_DAYS > ARO_EXP_ARRIVE and x.RU_RHREF = ARO_RHREF and x.RU_CODE = RUL_PRIMARY) as Room_Alloc__18L",
	"SRSL_MESSAGE as details__21L",
	],
	where_group_order="RU_CODE = r.SRSL_PRIMARY(+) and r.SRSL_TABLE(+) = 'RU' and RUL_DATE <= r.SRSL_DATE(+)"
	" and exists (select NULL from T_LU where LU_CLASS = 'SIHOT_HOTELS' and LU_NUMBER = RUL_SIHOT_HOTEL and LU_ID = :resort)"
	" and trunc(RUL_DATE) = :chg_date"
	" and case when substr(:mkt, 1, 4) = 'ALL-' then instr(substr(:mkt, 5), RUL_SIHOT_RATE) - 1"
	" when :mkt = 'ALL' then -1"
	" else -instr(:mkt, RUL_SIHOT_RATE) end < 0"
	" order by CD_CODE",
	resort_criteria='BHC', resort_selection=dict(from_join="T_LU", cols=["LU_ID"], where_group_order="LU_CLASS = 'SIHOT_HOTELS' and LU_ACTIVE = 1 order by LU_NUMBER"),
	chg_date_criteria=datetime.date.today(),
	mkt_criteria='ALL' #, mkt_selection=dict(from_join="T_RO", cols=["RO_CODE"], where_group_order="RO_SIHOT_RATE is not NULL union all select '<ALL>' from dual")
	),
	dict(name='SihotToAcu', parent_board='Acumen'
	),
	dict(name='Room Changes', parent_board='SihotToAcu', from_join="T_SRSL",
	cols=["SRSL_PRIMARY as rooms__09", "SRSL_ACTION as action__03", "SRSL_STATUS as status__09", "SRSL_LOGREF as guest_id__09", "SRSL_MESSAGE as msg__60L"],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'ARO' order by SRSL_DATE desc",
	log_date_criteria=datetime.date.today()
	),
	dict(name='Room Change Check', parent_board='SihotToAcu', from_join="T_SRSL, T_CD m, T_CD p, T_ARO f, T_ARO t",
	cols=["SRSL_PRIMARY as rooms__09", "SRSL_ACTION as act__03", "SRSL_STATUS as status__09", "SRSL_LOGREF as guest_id__09", "SRSL_MESSAGE as msg__60L",
	"m.CD_CODE || '/' || m.CD_SNAM1 as pax1__12L", "p.CD_CODE || '/' || p.CD_SNAM1 as pax2__12L",
	"f.ARO_CDREF || '/' || f.ARO_ROREF || '=' || f.ARO_STATUS || ':' || to_char(f.ARO_EXP_ARRIVE, 'DD-MON') || '-' || to_char(f.ARO_EXP_DEPART, 'DD-MON') || ' => '"
	"|| t.ARO_CDREF || '/' || t.ARO_ROREF || '=' || t.ARO_STATUS || ':' || to_char(t.ARO_EXP_ARRIVE, 'DD-MON') || '-' || to_char(t.ARO_EXP_DEPART, 'DD-MON') as occ__60L",
	"substr("
	"     case when f.ARO_STATUS in (300, 330) and trunc(SRSL_DATE) > f.ARO_EXP_DEPART then ', Checkout missing' end"
	"  || case when f.ARO_STATUS in (200, 210, 220) and trunc(SRSL_DATE) between f.ARO_EXP_ARRIVE + 1 and f.ARO_EXP_DEPART - 1 then ', Check-in missing' end"
	"  || case when f.ARO_STATUS in (320, 390) and trunc(SRSL_DATE) < f.ARO_EXP_DEPART and SRSL_ACTION = 'CO' then ', Early Checkout' end"
	"  || case when f.ARO_STATUS in (300, 330) and trunc(SRSL_DATE) > f.ARO_EXP_ARRIVE and SRSL_ACTION = 'CI' then ', Late Check-in' end"
	"  || case when (f.ARO_STATUS in (320, 390) and trunc(SRSL_DATE) < f.ARO_EXP_DEPART or t.ARO_STATUS in (300, 330) and trunc(SRSL_DATE) < t.ARO_EXP_ARRIVE)"
	"           and SRSL_ACTION = 'RM' then ', Early Transfer' end"
	"  || case when (f.ARO_STATUS in (320, 390) and trunc(SRSL_DATE) > f.ARO_EXP_DEPART or t.ARO_STATUS in (200, 210, 220) and trunc(SRSL_DATE) > t.ARO_EXP_ARRIVE)"
	"           and SRSL_ACTION = 'RM' then ', Late Transfer' end"
	"  , 3) as Discrep__60L"
	],
	where_group_order="trunc(SRSL_DATE) = :log_date and SRSL_TABLE = 'ARO'"
	" and SRSL_LOGREF = m.CD_SIHOT_OBJID(+) and SRSL_LOGREF = p.CD_SIHOT_OBJID2(+)"
	" and case when instr(SRSL_PRIMARY, '-') > 0 then substr(SRSL_PRIMARY, 1, instr(SRSL_PRIMARY, '-') - 1) else SRSL_PRIMARY end = f.ARO_APREF(+)"
	" and trunc(SRSL_DATE) between f.ARO_EXP_ARRIVE(+) and f.ARO_EXP_DEPART(+)"
	" and case when instr(SRSL_PRIMARY, '-') > 0 then substr(SRSL_PRIMARY, instr(SRSL_PRIMARY, '-') + 1) else NULL end = t.ARO_APREF(+)"
	" and trunc(SRSL_DATE) between t.ARO_EXP_ARRIVE(+) and t.ARO_EXP_DEPART(+)"
	" order by SRSL_DATE desc",
	log_date_criteria=datetime.date.today()
	),
	dict(name='Sihot', background_color=(0.69, 0, 0, 1)
	),
	dict(name='Sihot Reservation Discrepancies', parent_board='Sihot',
	first_arrival_criteria=datetime.date.today(), days_criteria='1', days_selection=[str(_) for _ in range(10)]
	),
	dict(name='Sihot Reservation Search', parent_board='Sihot',
	hotel_id_criteria='', hotel_id_selection=dict(from_join="T_LU", cols=["to_char(LU_NUMBER)"],
	where_group_order="LU_CLASS = 'SIHOT_HOTELS' and LU_ACTIVE = 1 order by LU_NUMBER"),
	from_date_criteria=datetime.date.today(), to_date_criteria=datetime.date.today(),
	matchcode_criteria='', name_criteria='', gdsno_criteria='', flags_criteria='', scope_criteria='',
	guest_id_criteria=''
	),
	dict(name='Notification', parent_board='Sihot'
	),
	dict(name='Acu Server', background_color=(0.75, 0.36, 0, 1)
	),
	dict(name='Time Sync', parent_board='Acu Server'
	),
	dict(name='Link Alive', parent_board='Acu Server'
	),
	dict(name='System Config', background_color=(0, 0, 0.6, 1)
	),
	dict(name='Agency Match Codes', parent_board='System Config'
	),
	dict(name='Agency Object Ids', parent_board='System Config'
	),
	]'''
acuuser = AECKER

